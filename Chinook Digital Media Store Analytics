--For this project, I'm querying a database with multiple tables in it to quantify statistics about customers and orders from a Digital media store.

#1. Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT CustomerId, FirstName, LastName, Country
FROM chinook.customers
    WHERE Country != 'USA'; 

#2. Show only the Customers from Brazil.

SELECT * FROM chinook.customers
    WHERE Country = 'Brazil';

#3. Find the Invoices of customers who are from Brazil. 
The resulting table should show the customer's full name, 
Invoice ID, Date of the invoice, and billing country.

SELECT cc.FirstName, cc.LastName, ci.InvoiceId, ci.InvoiceDate, ci.BillingCountry
FROM chinook.invoices AS ci
    LEFT JOIN chinook.customers AS cc
    ON ci.CustomerId = cc.CustomerId
    WHERE ci.BillingCountry = 'Brazil'; 

#4. Show the Employees who are Sales Agents.

SELECT * FROM chinook.employees 
    WHERE title LIKE 'Sales%Agent';

#5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT distinct BillingCountry
FROM chinook.invoices;

#6. Provide a query that shows the invoices associated with each sales agent. 
The resulting table should include the Sales Agent's full name.

SELECT ce.FirstName, ce.LastName, ci.InvoiceId
FROM chinook.invoices AS ci
    JOIN chinook.customers AS cc
    ON ci.CustomerId = cc.CustomerId
    JOIN chinook.employees AS ce
    ON cc.SupportRepId = ce.EmployeeId
    WHERE ce.title = "Sales Support Agent";

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT ce.FirstName, ce.LastName, cc.FirstName, cc.LastName, cc.Country, ci.total
FROM chinook.invoices AS ci
    JOIN chinook.customers AS cc
    ON ci.CustomerId = cc.CustomerId
    JOIN chinook.employees AS ce
    ON ce.EmployeeId = cc.SupportRepId;

#8. How many Invoices were there in 2009?

SELECT COUNT(InvoiceDate)
FROM chinook.invoices
    WHERE InvoiceDate LIKE "2009%";

#9. What are the total sales for 2009?

SELECT SUM(total)
FROM chinook.Invoices
    WHERE InvoiceDate Like "2009%";

#10. Write a query that includes the purchased track name with each invoice line ID.

SELECT ct.name, cii.InvoiceLineId
FROM chinook.invoice_items AS cii
    JOIN chinook.tracks AS ct
    ON cii.TrackId = ct.TrackId;

#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT car.Name, ct.Name, cii.InvoiceLineId 
FROM chinook.invoice_items AS cii
    JOIN chinook.tracks AS ct
    ON cii.TrackId = ct.trackId
    JOIN chinook.albums AS cal
    ON ct.AlbumId = cal.AlbumId
    JOIN chinook.artists AS car
    ON cal.ArtistId = car.ArtistId;

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name AS 'Track', al.Title AS 'Album', mt.Name AS 'Media_Type', g.Name AS 'Genre'
FROM chinook.tracks AS t 
    JOIN chinook.albums AS al
    ON t.AlbumId = al.AlbumId
    JOIN chinook.media_types AS mt
    ON t.MediaTypeId = mt.MediaTypeId
    JOIN chinook.genres AS g
    ON t.GenreId = g.GenreId;

#13. Show the total sales made by each sales agent.

SELECT e.FirstName, e.LastName, ROUND(SUM(i.total)) AS 'Total'
FROM chinook.invoices AS i
    JOIN chinook.customers AS c
    ON i.CustomerId = c.CustomerId
    JOIN chinook.employees AS e
    ON c.SupportRepId = e.EmployeeId
    WHERE e.Title = 'Sales Support Agent'
    GROUP BY e.EmployeeId;

#14. Which sales agent made the most dollars in sales in 2009? 

SELECT e.FirstName, e.LastName, ROUND(SUM(i.total)) AS 'Total'
FROM chinook.invoices AS i
    JOIN chinook.customers AS c
    ON i.CustomerId = c.CustomerId
    JOIN chinook.employees AS e
    ON c.SupportRepId = e.EmployeeId
    WHERE e.Title = 'Sales Support Agent'
    AND i.InvoiceDate LIKE '2009%'
    GROUP BY e.EmployeeId
    ORDER BY ROUND(SUM(i.total)) DESC
    LIMIT 1;

#15. What is the range of dates of the invoices?

SELECT MIN(InvoiceDate), MAX(InvoiceDate)
FROM chinook.invoices;

#16. What are the most recent invoices by customer ID?

SELECT CustomerId, InvoiceDate
FROM (SELECT * FROM chinook.invoices 
    ORDER BY CustomerId, InvoiceDate desc) 
    GROUP BY CustomerId;
    
#17. Create a column that says which customers are active or inactive (meaning that haven't bought anything since 2012).

SELECT CustomerId, InvoiceDate,
    CASE WHEN InvoiceDate >'2013%' THEN 'active'
    ELSE 'inactive' 
    END ActivityStatus
FROM (SELECT * FROM chinook.invoices 
    ORDER BY CustomerId, InvoiceDate desc) 
    GROUP BY CustomerId;

18. What are 10 names of the most sold tracks?

SELECT ii.TrackId, t.Name, COUNT(ii.TrackID) AS 'TimesSold'
FROM chinook.invoice_items AS ii
    JOIN chinook.tracks AS t
    ON ii.TrackId = t.TrackId
    GROUP BY ii.TrackId
    ORDER BY COUNT(ii.TrackID) DESC
    LIMIT 10;

#19. What country spent the most money?

WITH citiesCTE AS (
SELECT BillingCity, BillingCountry, ROUND(SUM(total)) AS AmountSpent
FROM invoices
    GROUP BY BillingCountry, BillingCity)

SELECT BillingCountry, SUM(AmountSpent) AS AmountSpent
FROM citiesCTE
    GROUP BY BillingCountry
    ORDER BY AmountSpent DESC;

#20. What is the average sold by country?;

WITH citiesCTE AS (
SELECT BillingCity, BillingCountry, ROUND(SUM(total)) AS AmountSpent
FROM invoices
    GROUP BY BillingCountry, BillingCity)
    
SELECT BillingCity, BillingCountry, AmountSpent, 
    AVG(AmountSpent) OVER (PARTITION BY BillingCountry) AS 'AvgSold'
FROM citiesCTE;
