-- For this project, I downloaded Spotify data from Kaggle. 

-- Created the following table to insert data into.
CREATE TABLE BIT_DB.Spotifydata (
  id integer PRIMARY KEY,
  artist_name varchar NOT NULL,
  track_name varchar NOT NULL,
  track_id varchar NOT NULL,
  popularity integer NOT NULL,
  danceability decimal(4,3) NOT NULL,
  energy decimal(4,3) NOT NULL,
  song_key integer NOT NULL,
  loudness decimal(5,3) NOT NULL,
  song_mode integer NOT NULL,
  speechiness decimal(5,4) NOT NULL,
  acousticness decimal(6,5) NOT NULL,
  instrumentalness decimal(8,7) NOT NULL,
  liveness decimal(5,4) NOT NULL,
  valence decimal(4,3) NOT NULL,
  tempo decimal(6,3) NOT NULL,
  duration_ms integer NOT NULL,
  time_signature integer NOT NULL );

-- Then I inserted the Spotify Data .csv into the table.


-- And finally I explored the data using the following SQL. 

#1. What artist released the longest song?

SELECT artist_name
FROM BIT_DB.Spotifydata
    ORDER BY duration_ms DESC
    LIMIT 1;

#2. Who are the top 10 artists based on popularity?

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10;

#3. Which three artists has the most songs on the chart?

SELECT artist_name, COUNT(artist_name) AS total_tracks
FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY total_tracks DESC
    LIMIT 3;

#4. List all of the songs you could to CPR with (100-120 BPM/tempo).

SELECT artist_name, track_name, tempo
FROM BIT_DB.Spotifydata
    WHERE tempo BETWEEN  100 AND 120
    ORDER BY tempo ASC;

#5. List all the artists and songs that have the word "Heart" in the track's name.

SELECT artist_name, track_name
FROM BIT_DB.spotifydata
    WHERE track_name LIKE '%heart%';

#6. How many songs does Dua Lipa have on chart?

SELECT COUNT(track_name)
FROM BIT_DB.spotifydata
    WHERE artist_name = 'Dua Lipa';

#7. What is the average danceability by artist and track?

SELECT artist_name, track_name, AVG(danceability)
FROM BIT_DB.spotifydata
 GROUP BY artist_name, track_name;
 
#8. What is the average danceability for the 10 most popular songs?

SELECT track_name , popularity, AVG(danceability)
FROM BIT_DB.spotifydata
    GROUP BY track_name
    ORDER BY popularity DESC
    LIMIT 10;

#9. List the top 3 songs with the slowest tempo.

SELECT track_name, tempo
FROM BIT_DB.spotifydata
    ORDER BY tempo ASC
    LIMIT 3;

#10. Create a column to assign if a song is too fast or too slow to use for CPR.

SELECT track_name, tempo,
    CASE WHEN tempo > 120 THEN 'above BPM'
    WHEN tempo <100 THEN 'below BPM'
    ELSE 'within BPM'
    END AS 'BPM_zone'
FROM BIT_DB.spotifydata;



    

